
//1. Для передачи из учетной сиcтемы
//
Функция ПередатьДокумент(ИдентификаторДокумента, ТипДокумента, ТаблицаGtin)
	
	СтруктураВозврата = Новый Структура("Результат,ОписаниеОшибки",Истина,"");
	
	Попытка
		
		НовыйДокумент = Документы.СборDM.СоздатьДокумент();
		НовыйДокумент.Дата = ТекущаяДата();
		НовыйДокумент.ИдентификаторДокумента = ИдентификаторДокумента;
		НовыйДокумент.ТипДокумента = ТипДокумента;
		
		ТаблицаGtin = СериализаторXDTO.ПрочитатьXDTO(ТаблицаGtin);
		
		Для Каждого СтрокаТабличнойЧасти из ТаблицаGtin Цикл 
			
			НоваяСтрока = НовыйДокумент.ТаблицаGTIN.Добавить();
			НоваяСтрока.GTIN       = СтрокаТабличнойЧасти.GTIN;
			НоваяСтрока.Количество = СтрокаТабличнойЧасти.Количество;
			
		КонецЦикла;
		
		НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
		
	Исключение
		
		СтруктураВозврата.Результат = Ложь;
		СтруктураВозврата.ОписаниеОшибки = ОписаниеОшибки();
		
	КонецПопытки;
	
	ЗаписьХМЛ = Новый ЗаписьXML;
	
	Возврат СериализаторXDTO.ЗаписатьXDTO(СтруктураВозврата);
	
КонецФункции

//2.Для получения gtinов по идентификатору документа из мобильного приложения
//
Функция ПолучитьТаблицуGtin(ИдентификаторДокумента)
	
	СтруктураВозврата = Новый Структура("Результат,ОписаниеОшибки,ТаблицаGTIN",Истина,"");
	
	Попытка		
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СборDM.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_Документ
		|ИЗ
		|	Документ.СборDM КАК СборDM
		|ГДЕ
		|	СборDM.ИдентификаторДокумента = &ИдентификаторДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Документ.Ссылка КАК Ссылка
		|ИЗ
		|	ВТ_Документ КАК ВТ_Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Документ.Ссылка.ТаблицаGtin.(
		|		GTIN КАК GTIN,
		|		Количество КАК Количество
		|	) КАК Ссылка
		|ИЗ
		|	ВТ_Документ КАК ВТ_Документ";
		
		Запрос.УстановитьПараметр("ИдентификаторДокумента", ИдентификаторДокумента);
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		Если МассивРезультатов[1].Пустой() Тогда 
			
			СтруктураВозврата.Результат = Ложь;
			СтруктураВозврата.ОписаниеОшибки = "Не найден документ с идентификатором <" + ИдентификаторДокумента + ">";	
		Иначе		
			СтруктураВозврата.ТаблицаGtin = МассивРезультатов[2].Выгрузить(); 
			
		КонецЕсли;
		
	Исключение
		
		СтруктураВозврата.Результат = Ложь;
		СтруктураВозврата.ОписаниеОшибки = ОписаниеОшибки();
		
	КонецПопытки;
	
	Возврат СериализаторXDTO.ЗаписатьXDTO(СтруктураВозврата);
	
КонецФункции

//3. Для передачи DM в облако из мобильного приложения
//
Функция ПередатьТаблицуDM(ИдентификаторДокумента, ТаблицаDM)
	
	СтруктураВозврата = Новый Структура("Результат,ОписаниеОшибки",Истина,"");
	
	Попытка
		
		НайденныйДокумент = Документы.СборDM.НайтиПоРеквизиту("ИдентификаторДокумента",ИдентификаторДокумента);
		Если НайденныйДокумент = Неопределено Тогда 
			
			СтруктураВозврата.Результат = Ложь;
			СтруктураВозврата.ОписаниеОшибки = "Не найден документ с идентификатором <" + ИдентификаторДокумента + ">";
		Иначе
			
			ТаблицаDM = СериализаторXDTO.ПрочитатьXDTO(ТаблицаDM);
			
			ОбъектДокумента = НайденныйДокумент.ПолучитьОбъект();
			ОбъектДокумента.ТаблицаDM.Очистить();
			
			Для Каждого СтрокаТабличнойЧасти из ТаблицаDM Цикл 
				
				НоваяСтрока = ОбъектДокумента.ТаблицаDM.Добавить();
				НоваяСтрока.GTIN	   = СтрокаТабличнойЧасти.GTIN;
				НоваяСтрока.DM 		   = СтрокаТабличнойЧасти.DM;
				НоваяСтрока.Количество = СтрокаТабличнойЧасти.Количество;
				
			КонецЦикла;
			
			ОбъектДокумента.Записать(РежимЗаписиДокумента.Проведение);
			
		КонецЕсли;
		
	Исключение
		
		СтруктураВозврата.Результат = Ложь;
		СтруктураВозврата.ОписаниеОшибки = ОписаниеОшибки();
		
	КонецПопытки;
	
	Возврат СериализаторXDTO.ЗаписатьXDTO(СтруктураВозврата);

КонецФункции

//4. Для получения дата матриксов в учетную систему из облака
//
Функция ПолучитьТаблицуDM(ИдентификаторДокумента)
	
	СтруктураВозврата = Новый Структура("Результат,ОписаниеОшибки,ТаблицаDM",Истина,"");
	
	Попытка
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СборDM.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_Документ
		|ИЗ
		|	Документ.СборDM КАК СборDM
		|ГДЕ
		|	СборDM.ИдентификаторДокумента = &ИдентификаторДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Документ.Ссылка КАК Ссылка
		|ИЗ
		|	ВТ_Документ КАК ВТ_Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СборDMТаблицаDM.GTIN КАК GTIN,
		|	СборDMТаблицаDM.DM КАК DM
		|ИЗ
		|	Документ.СборDM.ТаблицаDM КАК СборDMТаблицаDM
		|ГДЕ
		|	СборDMТаблицаDM.Ссылка В
		|			(ВЫБРАТЬ
		|				ВТ_Документ.Ссылка КАК Ссылка
		|			ИЗ
		|				ВТ_Документ КАК ВТ_Документ)";		
		Запрос.УстановитьПараметр("ИдентификаторДокумента", ИдентификаторДокумента);
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		
		Если МассивРезультатов[1].Пустой() Тогда 
			
			СтруктураВозврата.Результат = Ложь;
			СтруктураВозврата.ОписаниеОшибки = "Не найден документ с идентификатором <" + ИдентификаторДокумента + ">";	
		Иначе		
			СтруктураВозврата.ТаблицаDM = МассивРезультатов[2].Выгрузить(); 
			
		КонецЕсли;
		
	Исключение
		
		СтруктураВозврата.Результат = Ложь;
		СтруктураВозврата.ОписаниеОшибки = ОписаниеОшибки();
		
	КонецПопытки;
	
	Возврат СериализаторXDTO.ЗаписатьXDTO(СтруктураВозврата);
	
КонецФункции

Функция Ping()
	Возврат "";
КонецФункции
